{"version":3,"sources":["Components/PaginationButton/PaginationButton.jsx","Components/Pagination/Pagination.jsx","App.js","index.js"],"names":["PaginationButton","simbol","page","onPageChange","type","className","onClick","event","preventDefault","defaultProps","Pagination","total","itemsOnPage","onChangePage","maxPages","Math","ceil","getValue","pageNum","toString","classNames","disabled","Array","from","length","_","i","filter","map","active","key","App","state","values","currentPage","setState","onChangePageValues","newAmount","makeArr","start","items","this","name","value","onChange","target","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iOAGaA,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,aAAjB,OAC9B,4BACEC,KAAK,SACLC,UAAU,YACVC,QAAS,SAACC,GACRA,EAAMC,iBAENL,GAAcD,KAGhB,8BAAOD,GAAUC,KAUrBF,EAAiBS,aAAe,CAC9BR,OAAQ,ICnBH,IAAMS,EAAa,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,YAAaV,EAAyB,EAAzBA,KAAMW,EAAmB,EAAnBA,aAC/CC,EAAWC,KAAKC,KAAKL,EAAQC,GAC7BK,EAAW,SAAAC,GAAO,OACrBA,IAAYhB,EAAO,GAAiB,IAAZgB,GACjBA,IAAYhB,EAAO,GAAKgB,IAAYJ,EAE1C,MACAI,EAAQC,YAEZ,OACE,yBAAKd,UAAU,cACb,wBAAIA,UAAU,cACZ,wBACEA,UAAWe,IAAW,YAAa,CAAEC,SAAmB,IAATnB,KAE/C,kBAAC,EAAD,CACED,OAAO,OACPC,KAAI,UAAKA,EAAO,GAChBC,aAAcU,KAIjBS,MACEC,KAAK,CAAEC,OAAQV,IAAY,SAACW,EAAGC,GAAJ,OAAUA,EAAI,KACzCC,QAAO,SAAAT,GAAO,OAAgB,IAAZA,GACFA,IAAYJ,GACXI,GAAWhB,EAAO,GAAKgB,GAAWhB,EAAO,KAC1D0B,KAAI,SAAAV,GAAO,OACV,wBACEb,UAAWe,IAAW,YAAa,CACjCS,OAAQX,IAAYhB,EACpBmB,SAAgC,QAAtBJ,EAASC,KAErBY,IAAKZ,GAEL,kBAAC,EAAD,CACEhB,KAAMe,EAASC,GACff,aAAcU,QAKtB,wBACER,UAAWe,IAAW,YAAa,CACjCC,SAAUnB,IAASY,KAGrB,kBAAC,EAAD,CACEb,OAAO,OACPC,KAAI,UAAKA,EAAO,GAChBC,aAAcU,QC0CXkB,G,wNA1FXC,MAAQ,CACNrB,MAAO,GACPC,YAAa,EACbV,KAAM,G,EAGR+B,OAAS,CAAC,EAAG,EAAG,GAAI,I,EAEpBpB,aAAe,SAACqB,GACd,EAAKC,SAAS,CACZjC,KAAMgC,K,EAIVE,mBAAqB,SAACC,GACpB,EAAKF,SAAS,CACZvB,YAAayB,EACbnC,KAAM,K,EAIVoC,QAAU,WAKR,IAJA,MAA8B,EAAKN,MAA3BpB,EAAR,EAAQA,YACF2B,EADN,EAAqBrC,KACEU,EAAeA,EAAe,EAC/C4B,EAAQ,IAAIlB,MAAMV,GAEfc,EAAI,EAAGA,EAAIc,EAAMhB,OAAQE,GAAK,EACrCc,EAAMd,GAAKa,EAAQb,EAGrB,OAAOc,G,4CAGT,WACE,IACE3B,EAIE4B,KAJF5B,aACAuB,EAGEK,KAHFL,mBACAE,EAEEG,KAFFH,QACAL,EACEQ,KADFR,OAGF,EAIIQ,KAAKT,MAHP9B,EADF,EACEA,KACAS,EAFF,EAEEA,MACAC,EAHF,EAGEA,YAGF,OACE,yBAAKP,UAAU,0BACb,4BACEqC,KAAK,OACLrC,UAAU,aACVsC,MAAO/B,EACPgC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,GAAoBS,EAAOF,SAGpDV,EAAOL,KAAI,SAAAe,GAAK,OACf,4BACEb,IAAKa,EACLA,MAAOA,GAENA,OAOP,wBAAItC,UAAU,cACXiC,IAAUV,KAAI,SAAAkB,GAAI,OACjB,wBACEhB,IAAKgB,EACLzC,UAAU,mBAETyC,OAKP,kBAAC,EAAD,CACEnC,MAAOA,EACPC,YAAaA,EACbV,KAAMA,EACNW,aAAcA,S,GApFRkC,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ed7e6031.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PaginationButton = ({ simbol, page, onPageChange }) => (\n  <button\n    type=\"button\"\n    className=\"page-link\"\n    onClick={(event) => {\n      event.preventDefault();\n\n      onPageChange(+page);\n    }}\n  >\n    <span>{simbol || page}</span>\n  </button>\n);\n\nPaginationButton.propTypes = {\n  simbol: PropTypes.string,\n  page: PropTypes.string.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nPaginationButton.defaultProps = {\n  simbol: '',\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { PaginationButton } from '../PaginationButton';\n\nexport const Pagination = ({ total, itemsOnPage, page, onChangePage }) => {\n  const maxPages = Math.ceil(total / itemsOnPage);\n  const getValue = pageNum => ((\n    (pageNum === page - 2 && pageNum !== 1)\n        || (pageNum === page + 2 && pageNum !== maxPages)\n  )\n    ? '...'\n    : pageNum.toString());\n\n  return (\n    <nav className=\"p-2 m-auto\">\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', { disabled: page === 1 })}\n        >\n          <PaginationButton\n            simbol=\"&laquo;\"\n            page={`${page - 1}`}\n            onPageChange={onChangePage}\n          />\n        </li>\n\n        {Array\n          .from({ length: maxPages }, (_, i) => i + 1)\n          .filter(pageNum => pageNum === 1\n                        || pageNum === maxPages\n                        || (pageNum >= page - 2 && pageNum <= page + 2))\n          .map(pageNum => (\n            <li\n              className={classNames('page-item', {\n                active: pageNum === page,\n                disabled: getValue(pageNum) === '...',\n              })}\n              key={pageNum}\n            >\n              <PaginationButton\n                page={getValue(pageNum)}\n                onPageChange={onChangePage}\n              />\n            </li>\n          ))\n                }\n        <li\n          className={classNames('page-item', {\n            disabled: page === maxPages,\n          })}\n        >\n          <PaginationButton\n            simbol=\"&raquo;\"\n            page={`${page + 1}`}\n            onPageChange={onChangePage}\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  itemsOnPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Pagination } from './Components/Pagination';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends React.Component {\n    state = {\n      total: 42,\n      itemsOnPage: 5,\n      page: 1,\n    }\n\n    values = [3, 5, 10, 20];\n\n    onChangePage = (currentPage) => {\n      this.setState({\n        page: currentPage,\n      });\n    }\n\n    onChangePageValues = (newAmount) => {\n      this.setState({\n        itemsOnPage: newAmount,\n        page: 1,\n      });\n    }\n\n    makeArr = () => {\n      const { itemsOnPage, page } = this.state;\n      const start = ((page * itemsOnPage) - itemsOnPage) + 1;\n      const items = new Array(itemsOnPage);\n\n      for (let i = 0; i < items.length; i += 1) {\n        items[i] = start + i;\n      }\n\n      return items;\n    }\n\n    render() {\n      const {\n        onChangePage,\n        onChangePageValues,\n        makeArr,\n        values,\n      } = this;\n\n      const {\n        page,\n        total,\n        itemsOnPage,\n      } = this.state;\n\n      return (\n        <div className=\"d-flex flex-column App\">\n          <select\n            name=\"page\"\n            className=\"p-2 m-auto\"\n            value={itemsOnPage}\n            onChange={({ target }) => onChangePageValues(+target.value)}\n          >\n\n            {values.map(value => (\n              <option\n                key={value}\n                value={value}\n              >\n                {value}\n              </option>\n            ))\n                    }\n\n          </select>\n\n          <ul className=\"list-group\">\n            {makeArr().map(item => (\n              <li\n                key={item}\n                className=\"list-group-item\"\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n\n          <Pagination\n            total={total}\n            itemsOnPage={itemsOnPage}\n            page={page}\n            onChangePage={onChangePage}\n          />\n        </div>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}